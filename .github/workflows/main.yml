name: Android Kernel Driver Builder

on:
  workflow_dispatch:
    inputs:
      android_version:
        description: 'Android Version (e.g., 12)'
        required: true
        default: '12'
      kernel_version:
        description: 'Kernel Version (e.g., 5.10)'
        required: true
        default: '5.10'
      driver_name:
        description: 'Driver Module Name (e.g., read.ko)'
        required: true
        default: 'read.ko'
      target_arch:
        description: 'Target Architecture (aarch64, x86_64)'
        required: true
        default: 'aarch64'

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:  
      - name: Checkout repository  
        uses: actions/checkout@v4.2.2  
          
      - name: Prepare kerneldriver directory  
        run: |  
          set -e
          mkdir -p kerneldriver  
          mv ./code/*.c kerneldriver/  
          echo 'obj-m += read.o' > kerneldriver/Makefile  
          echo 'ccflags-y := -I$$(srctree)/include' >> kerneldriver/Makefile  
            
      - name: Install repo tool  
        run: |  
          set -e
          sudo curl -L https://storage.googleapis.com/git-repo-downloads/repo -o /usr/local/bin/repo  
          sudo chmod a+x /usr/local/bin/repo  

      - name: Set up Android Kernel source  
        run: |  
          set -e
          mkdir -p android-kernel && cd android-kernel  
          repo init -u https://android.googlesource.com/kernel/manifest -b common-android${{ github.event.inputs.android_version }}-${{ github.event.inputs.kernel_version }}  
          repo sync -j$(nproc) -c --no-tags --optimized-fetch --force-sync  

      - name: Copy kerneldriver  
        run: |  
          set -e
          cd android-kernel  
          cp -r ../kerneldriver common/drivers  

      - name: Modify drivers Makefile  
        run: |  
          set -e
          cd android-kernel  
          echo "obj-y += kerneldriver/" >> common/drivers/Makefile 

      - name: Add module to GKI modules list
        run: |
          cd android-kernel
          MODULE_NAME="drivers/kerneldriver/${{ github.event.inputs.driver_name }}"
          
          awk -i inplace -v module="$MODULE_NAME" '
            BEGIN { added=0 }
            /_COMMON_GKI_MODULES_LIST = \[/ { in_list=1 }
            in_list && /\]/ {
              if (!added) {
                print "    \"" module "\","
                added=1
              }
              in_list=0
            }
            in_list && !added {
              if (module < $0) {
                print "    \"" module "\","
                added=1
              }
            }
            { print }
          ' common/modules.bzl

      - name: Increase stack frame size limit  
        run: |  
          set -e
          cd android-kernel  
          # 更新所有Makefile中的帧大小限制  
          find . -type f -name "Makefile*" -exec sed -i 's/-Wframe-larger-than=[0-9]\+/-Wframe-larger-than=4096/g' {} +  
            
          # 确保全局设置  
          if ! grep -q "FRAME_WARN" common/Makefile; then  
              echo 'KBUILD_CFLAGS += -Wframe-larger-than=4096' >> common/Makefile  
          fi  
            
          # 更新build.config文件  
          find . -name "build.config.*" -exec sed -i 's/-Wframe-larger-than=[0-9]\+/-Wframe-larger-than=4096/g' {} +  
            
          # 针对GKI 2.0的额外设置  
          if [ ${{ github.event.inputs.android_version }} -ge 12 ]; then  
              sed -i 's/FRAME_WARN := [0-9]\+/FRAME_WARN := 4096/' build.config.common  
          fi  

      - name: Install dependencies  
        run: |  
          set -e
          sudo apt-get update  
          sudo apt-get install -y build-essential flex bison libssl-dev libelf-dev bc python3 python3-distutils  
          sudo apt-get install -y git-core gnupg zip unzip  
            
          # Android 12+ 需要Bazel  
          if [ ${{ github.event.inputs.android_version }} -ge 12 ]; then  
              sudo apt-get install -y openjdk-11-jdk  
              curl -L https://github.com/bazelbuild/bazel/releases/download/7.0.0/bazel-7.0.0-installer-linux-x86_64.sh -o bazel-installer.sh  
              chmod +x bazel-installer.sh  
              ./bazel-installer.sh --user  
              echo 'export PATH="$PATH:$HOME/bin"' >> ~/.bashrc  
              source ~/.bashrc  
          fi  

      - name: Build kernel module  
        run: |  
          set -e
          cd android-kernel  
            
          # 设置环境变量  
          export PATH="$PATH:$HOME/bin"  
            
          if [ ${{ github.event.inputs.android_version }} -ge 12 ]; then  
              echo "Building with Bazel for Android ${{ github.event.inputs.android_version }}"  
                
              # 配置环境  
              source build/envsetup.sh  
              lunch gki_${{ github.event.inputs.target_arch }}-userdebug  
                
              # 构建特定模块  
              bazel build --config=fast //common:kernel_${{ github.event.inputs.target_arch }}_dist -- //common/drivers/kerneldriver:read  
                
              # 创建输出目录  
              mkdir -p out  
                
              # 复制内核映像  
              cp bazel-bin/common/kernel_${{ github.event.inputs.target_arch }}_dist out/  
                
              # 复制内核模块  
              MODULE_PATH="bazel-bin/common/drivers/kerneldriver/${{ github.event.inputs.driver_name }}"  
              if [ -f "$MODULE_PATH" ]; then  
                  cp $MODULE_PATH out/  
              else  
                  echo "Error: Kernel module not found at $MODULE_PATH"  
                  exit 1  
              fi  
          else  
              echo "Building with legacy system for Android ${{ github.event.inputs.android_version }}"  
              BUILD_CONFIG=common/build.config.gki.${{ github.event.inputs.target_arch }} build/build.sh  
          fi  
        continue-on-error: false  
          
      - name: Upload artifacts  
        uses: actions/upload-artifact@v4.6.2  
        with:  
          name: kernel-driver-${{ github.event.inputs.target_arch }}  
          path: |  
            android-kernel/out/${{ github.event.inputs.driver_name }}  
            android-kernel/out/kernel_${{ github.event.inputs.target_arch }}
